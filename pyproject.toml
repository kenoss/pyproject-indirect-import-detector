[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "pyproject-indirect-import-detector"
version = "0.1.0a0"
description = "CI tool to detect indirect import"
authors = ["keno <keno.ss57@gmail.com>"]
license = "MIT"
packages = [
    {from = "src", include = "pyproject_indirect_import_detector"},
]

[tool.poetry.scripts]
pyproject-indirect-import-detector = "pyproject_indirect_import_detector.main:_main"

[tool.poetry.dependencies]
# Installable with python >= 3.6, but runtime requires >= 3.9.  Because:
#
# - Old pythons lacks some libraries and methods.  So, we want to use the latest python.
# - Poetry see this constraint and check compatibility with the packages' one.
#   For example, consider the following situation: the package A declare its python dependency `python = "^3.6"`.
#   Then, `poetry add pyproject-indirect-import-detector` fails if the below constrait is `python = "^3.9"`.
python = "^3.6"

result = "^0.6.0"
setuptools = "^56.0.0"
stdlib-list = "^0.8.0"
termcolor = "^1.1.0"
toml = "^0.10.2"

[tool.poetry.dev-dependencies]
Pillow = "^8.2.0"
PyGObject = "^3.40.1"
actfw-core = "^1.5.2"
pysen = {version = "^0.9.1", extras = ["lint"]}
pytest = "^5.2"

[tool.pysen.lint]
# TODO: https://github.com/kenoss/pyproject-indirect-import-detector/issues/1
enable_black = false
enable_flake8 = true
enable_isort = true
enable_mypy = true
mypy_preset = "strict"
line_length = 128
py_version = "py38"

[[tool.pysen.lint.mypy_targets]]
paths = ["src"]

[tool.pyproject-indirect-import-detector]
exclude_modules = [
    "a", # For test; dummy module.
    "b", # Ditto.
]
